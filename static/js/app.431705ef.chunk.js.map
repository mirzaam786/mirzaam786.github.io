{"version":3,"sources":["assets/noor.png","assets/logo.png","PushOffers.js","VendorPostOffer.js","CurrentOffers.js","UserList.js","DeceasedPerson.js","DuasBeforeBurial.js","DeceasedPersonDuas.js","DuasForDepartedHome.js","App.js","out.png","assets/duas.jpeg"],"names":["module","exports","Notifications","handleNotification","a","async","shouldShowAlert","shouldPlaySound","shouldSetBadge","VendorPostOffer","props","useState","offerTitle","setOfferTitle","offerDetails","setOfferDetails","offerPrice","setOfferPrice","vendorName","setVendorName","offerDuration","setOfferDuration","offerLocation","setOfferLocation","userDetails","setUserDetails","image","setImage","name","JSON","stringify","route","params","user","replace","username","nickname","console","log","useEffect","fetchData","Platform","OS","ImagePicker","status","alert","fetch","nodeAddress","response","json","userInfo","vendor","location","postcode","postOffer","offerDurationInt","parseInt","expiry","Date","now","method","headers","Accept","body","userID","userId","summary","discountedPrice","description","imgsource","base64","timeout","then","insertId","Alert","catch","err","View","style","flex","alignItems","Text","color","position","top","fontSize","fontWeight","marginLeft","marginTop","width","height","TextInput","placeholder","onChangeText","defaultValue","keyboardType","Button","title","onPress","mediaTypes","All","allowsEditing","aspect","quality","result","cancelled","Image","source","uri","TouchableOpacity","disabled","Boolean","opacity","borderRadius","borderColor","backgroundColor","margin","textAlign","ChildStack","createStackNavigator","require","CurrentOffers","lat","lng","expoPushToken","setNotification","notificationListener","useRef","responseListener","vendorOffers","setVendorOffers","selectedId","operation","distanceBetweenPoints","lat1","lon1","lat2","lon2","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","atan2","sqrt","filterOffers","offers","localOffers","i","length","latitude","d","longitude","push","navigation","goBack","getOffers","Constants","isDevice","Permissions","existingStatus","finalStatus","token","data","importance","MAX","vibrationPattern","lightColor","registerForPushNotificationsAsync","userType","doorNumber","error","current","notification","userResponse","renderItem","date","foodType","item","id","navigate","size","Content","Title","ccy","toFixed","expiryTime","getDate","getMonth","time","mins","getMinutes","hours","getHours","fourDigitTime","Subtitle","Navigator","initialRouteName","Screen","component","FlatList","keyExtractor","index","toString","extraData","UserList","vendorData","setVendorData","users","subtitle","DeceasedPerson","surname","setSurname","firstNames","setFirstNames","deathDate","setDeathDate","dob","setDob","postPersonInfo","dateDeath","numbers","match","formatDateOfDeath","styles","container","ImageBackground","bgImage","paddingTop","StyleSheet","create","padding","resizeMode","justifyContent","buttonVisible","DuasBeforeBurial","init","reserveList","setReserveList","nameList","setNameList","React","setOperation","fullnames","duasBeforeBurial","setDuasBeforeBurial","table","loadDuas","tableName","initReserveList","tmpReserveArray","tmpNameArray","totalLeft","request","statusText","textLabel","duaId","reserve","updateDuas","flexDirection","duatextHeadingLabel","subtextHeadingLabel","subtextEndHeadingLabel","display","duatextLabel","surah","subtextLabel","totalCount","input","e","test","newReserveList","handleReserveUpdate","value","marginRight","DeceasedPersonDuas","day","monthStr","getFullYear","dateformat","dateDied","DuasForDepartedHome","dateOfDeath","setDateOfDeath","setDOB","text","searchPerson","buttonInvisible","WebBrowser","Stack","useProxy","select","web","default","redirectUri","AuthSession","App","setToken","setUser","setName","clientId","responseType","scopes","extraParams","nonce","authorizationEndpoint","auth0Domain","isMounted","error_description","type","jwtToken","id_token","decoded","jwtDecode","sub","email","NavigationContainer","options","headerStyle","headerTitleStyle","container1","customerInvisible","customerVisible","vendorInvisible","vendorVisible"],"mappings":"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","file":"static/js/app.431705ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noor.45a020a2.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.45a020a2.png\";","import Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Text, View, Button, Platform } from 'react-native';\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\n\nexport default function PushOffers() {\n  const [expoPushToken, setExpoPushToken] = useState('');\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  useEffect(() => {\n    registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n\n    // This listener is fired whenever a notification is received while the app is foregrounded\n    notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n      setNotification(notification);\n    });\n\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\n    responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log(response);\n    });\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n  }, []);\n\n  return (\n    <View\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'space-around',\n      }}>\n      <Text>Your expo push token: {expoPushToken}</Text>\n      <View style={{ alignItems: 'center', justifyContent: 'center' }}>\n        <Text>Title: {notification && notification.request.content.title} </Text>\n        <Text>Body: {notification && notification.request.content.body}</Text>\n        <Text>Data: {notification && JSON.stringify(notification.request.content.data)}</Text>\n      </View>\n      <Button\n        title=\"Press to Send Notification\"\n        onPress={async () => {\n          await sendPushNotification(expoPushToken);\n        }}\n      />\n    </View>\n  );\n}\n\n// Can use this function below, OR use Expo's Push Notification Tool-> https://expo.io/notifications\nasync function sendPushNotification(expoPushToken) {\n  const message = {\n    to: expoPushToken,\n    sound: 'default',\n    title: 'Original Title',\n    body: 'And here is the body!',\n    data: { data: 'goes here' },\n  };\n\n  await fetch('https://exp.host/--/api/v2/push/send', {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Accept-encoding': 'gzip, deflate',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(message),\n  });\n}\n\n\n\n","import React, { useState, useEffect} from 'react';\nimport { Alert, Platform, Button, Image,  StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\nimport logo from './assets/logo.png';\nimport PushOffers from './PushOffers';\nimport * as ImagePicker from 'expo-image-picker';\n\n\nconst nodeAddress = 'http://192.168.0.197:3000'\n//const nodeAddress = 'http://34.89.25.113:3000'\nexport default function VendorPostOffer(props) {\n\n  const [offerTitle, setOfferTitle] = useState('');\n  const [offerDetails, setOfferDetails] = useState('');\n  const [offerPrice, setOfferPrice] = useState('');\n  const [vendorName, setVendorName] = useState('');\n  const [offerDuration, setOfferDuration] = useState('');\n  const [offerLocation, setOfferLocation] = useState('');\n  const [userDetails, setUserDetails] = useState(null);\n  const [image, setImage] = useState(null);\n\n  const user = JSON.stringify(props.route.params.user);\n  const name = JSON.stringify(props.route.params.user.name).replace(/\"/g,'')+\"!\";\n  const username = JSON.stringify(props.route.params.user.nickname).replace(/\"/g,'');\n  console.log(\"props.params: \" +username)\n\n\n  useEffect(() => {\n     console.log(\"UserInfo useEffect: entry\");\n     // get data if it exists before entering any new data\n     if (userDetails == null)\n        fetchData();\n\n    (async () => {\n      if (Platform.OS !== 'web') {\n        const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n        if (status !== 'granted') {\n          alert('Sorry, we need camera roll permissions to make this work!');\n        }\n      }\n    })();\n\n  });\n\n\n  const pickImage = async () => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 0,\n      base64: true,\n    });\n\n    console.log(result);\n    setImage(result);\n\n    if (!result.cancelled) {\n//      setImage(result.uri);\n    }\n  };\n\n  const fetchData= async()=>{\n        console.log(\"Vendor Post fetchData: \"+username)\n        const response = await fetch(nodeAddress+'/User?name='+ username);\n//        const response = await fetch('http://34.89.25.113:3000/User?name='+ username);\n        const userInfo = await response.json();\n        setUserDetails(userInfo);\n        const vendor = JSON.stringify(userInfo[0].name).replace(/\"/g,'');\n        setVendorName(vendor)\n        const location = JSON.stringify(userInfo[0].postcode).replace(/\"/g,'');\n        setOfferLocation(location)\n        console.log(\"Vendor Post Offer User Info: \"+JSON.stringify(userInfo[0]))\n\n  }\n\n  function postOffer() {\n        console.log(\"postOffer: entry\");\n        const offerObject = {\n            summary: 'Free Coffee',\n            discountedPrice: 123,\n            description: 'description'\n        }\n\n        var offerDurationInt = parseInt(offerDuration)\n        var expiry = new Date(Date.now()+offerDurationInt*60*1000);\n        console.log(\"expiry: \"+expiry);\n        const request = nodeAddress+'/VendorOffer';\n//       'http://192.168.0.16:3000/VendorOffer';\n                fetch(request, {\n                      method: 'POST',\n                      headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json'},\n                      body: JSON.stringify({\n                        userID: userDetails[0].userId,\n                        vendorName: vendorName,\n                        summary: offerTitle,\n                        discountedPrice: offerPrice,\n                        description: offerDetails,\n                        offerDuration: offerDuration,\n                        imgsource: image.base64,\n                          }),\n                      timeout: 10000\n                    })\n                      .then(response => {\n                        console.log('done: '+response.insertId)\n                        Alert.alert(\"Published offer\",\n                                    \"summary: \"+offerTitle);\n                        //notify all users\n                        sendPushNotifications();\n                        })\n                      .catch(err => {console.log(\"Error: \"+err)});\n        console.log('fetching...');\n\n   }\n   function sendPushNotifications() {\n        console.log(\"sendPushNotifications entry\")\n        // get all client tokens\n\n        // call\n\n\n\n   }\n\n\n   return (\n    <View style={{ flex: 1, alignItems: 'center' }}>\n\n      <Text style={{ color: '#655F5F', position: 'absolute', top: 0, fontSize: 20, fontWeight: 'bold', alignItems: 'center', marginLeft: 5, marginTop: 10, width: 240, height: 50 }}>\n        {\"Welcome \"+name}\n      </Text>\n      <Text style={{ color: '#655F5F', marginLeft: 45, marginTop: 50, fontSize: 18, alignItems: 'center', width: 310, height: 35 }}>\n        Enter your offer details below:\n      </Text>\n\n      <Text style={{ color: '#655F5F', marginLeft: 45, marginTop: 10, fontSize: 18, alignItems: 'center', width: 310, height: 35 }}>\n        {vendorName}\n      </Text>\n\n      <TextInput\n        style={{ fontSize: 18,  marginLeft: 45, marginTop: 10, width: 310, height: 20 }}\n        placeholder=\"Enter Offer Title\"\n        onChangeText={offerTitle => setOfferTitle(offerTitle)}\n        defaultValue={offerTitle}\n      />\n      <TextInput\n        style={{ fontSize: 18,  marginLeft: 45, marginTop: 10, width: 310, height: 20 }}\n        placeholder=\"Enter Offer Details\"\n        onChangeText={offerDetails => setOfferDetails(offerDetails)}\n        defaultValue={offerDetails}\n      />\n      <TextInput\n        style={{ fontSize: 18,  marginLeft: 45, marginTop: 10, width: 310, height: 20 }}\n        keyboardType = 'numeric'\n        placeholder=\"Enter Offer Price\"\n        onChangeText={offerPrice => setOfferPrice(offerPrice)}\n        defaultValue={offerPrice}\n      />\n      <TextInput\n        style={{ fontSize: 18,  marginLeft: 45, marginTop: 10, width: 310, height: 20 }}\n        placeholder=\"Duration (mins)\"\n        keyboardType = 'numeric'\n        onChangeText={offerDuration => setOfferDuration(offerDuration)}\n        defaultValue={offerDuration}\n      />\n      <Text style={{ fontSize: 18,  marginLeft: 45, marginTop: 10, width: 310, height: 30 }}>\n        {offerLocation}\n      </Text>\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n        {image && <Image source={{ uri: image.uri }} style={{ width: 200, height: 200 }} />}\n\n\n      <TouchableOpacity\n        onPress={() => postOffer()}\n        disabled={!Boolean(offerTitle && offerPrice && offerDuration)}\n        style={{opacity: (!Boolean(offerTitle && offerPrice && offerDuration)) ? 0.2: 0.8,borderRadius:8, borderColor: 'black', backgroundColor: 'red', margin:20 }}>\n        <Text style={{ textAlign: 'center', fontSize: 24, color: 'white',height: 38,width: 230}}>Publish</Text>\n      </TouchableOpacity>\n    </View>\n   );\n}\n","import React, { useRef, useState, useEffect} from 'react';\nimport { FlatList, Image,  StyleSheet, Text,TextInput, View, TouchableOpacity, Platform } from 'react-native';\nimport logo from './assets/logo.png';\nimport { List, ListItem, Avatar } from \"react-native-elements\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n//import OfferPayment from './OfferPayment';\n//import AddSubscription from './AddSubscriptionScreen';\n//import Checkout from './Checkout';\nimport Constants from 'expo-constants';\nimport * as Notifications from 'expo-notifications';\nimport * as Permissions from 'expo-permissions';\n\nconst nodeAddress = 'http://192.168.0.197:3000'\n//const nodeAddress = 'http://34.89.25.113:3000'\n\nconst ChildStack = createStackNavigator();\nconst chickenURI = 'https://drive.google.com/uc?id=1akTHo3BbFfVWjUY99VB-rJIZJ8I9bBow'\nconst img = require(\"./out.png\")\n//const chickenURI = Image.resolveAssetSource(img).uri\nconst thaiURI = 'https://drive.google.com/uc?id=1hynmnJa8F8qkubt7-nxvUhR42zYyN4a_'\nconst chineseURI = 'https://drive.google.com/uc?id=1wVpJl-GuIDGqC-ZkGVUeY64WwtcUoDqD'\nconst burgerURI = 'https://drive.google.com/uc?id=15vt0SdXqzjW6OS1-U2216nFX_Bub5tyG'\n\n\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n});\nexport default function CurrentOffers(props) {\n    console.log(\"CurrentOffers props: \" +JSON.stringify(props))\n//    console.log('Location: '+props.route.params.user.location.lat+\":\"+props.route.params.user.location.lng)\n//  const [expoPushToken, setExpoPushToken] = useState('');\n  let expoPushToken='';\n  const [notification, setNotification] = useState(false);\n  const notificationListener = useRef();\n  const responseListener = useRef();\n\n  const [vendorOffers, setVendorOffers] = useState(null);\n  const [selectedId, setSelectedId] = useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n  var operation = \"INSERT\";\n  const username = JSON.stringify(props.route.params.user.nickname).replace(/\"/g,'');\n  var lat,lng;\n  if (props.route.params.user.location != null) {\n    lat = props.route.params.user.location.lat;\n    lng = props.route.params.user.location.lng;\n  }\n  else {\n    alert(\"Enter your location\")\n    props.navigation.goBack()\n  }\n\n\n  useEffect(() => {\n       console.log(\"useEffect: entry\");\n       let token;\n\n        // fetch user information\n  //      getUserData();\n\n       if (vendorOffers == null)\n          getOffers();\n\n       //register for offer notifications\n//       registerForPushNotificationsAsync().then(token => setExpoPushToken(token));\n\n\n        registerForPushNotificationsAsync().then((token) => {\n          expoPushToken= token;\n          console.log(\"Customer token: \"+expoPushToken);\n          postUserInfo();\n        }).catch(err => console.error(err));\n\n\n        // This listener is fired whenever a notification is received while the app is foregrounded\n        notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n          setNotification(notification);\n        });\n\n    // This listener is fired whenever a user taps on or interacts with a notification (works when app is foregrounded, backgrounded, or killed)\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(response => {\n      console.log(response);\n\n\n      // lets save the users details in the database maybe should be done at an earlier point\n\n\n    });\n\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener);\n      Notifications.removeNotificationSubscription(responseListener);\n    };\n\n\n  }, []);\n\n\n  // store customer id and expoPush Token, maybe should move to UserInfo as we don't have their address and therefore\n  // don't know how close they are from the stores unless you request their gps location - TODO\n  function postUserInfo() {\n        console.log(\"postUserInfo: entry\");\n        console.log(\"postUserInfo: token: \"+expoPushToken);\n\n\n\n        const request = nodeAddress+'/User';\n                fetch(request, {\n                      method: 'POST',\n                      headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json'},\n                      body: JSON.stringify({\n                        operation: operation,\n                        userType: \"Customer\",\n                        user: username,\n                        vendorName: \"\",\n                        postcode: \"Test\",\n                        doorNumber: 11,\n                        expoPushToken: expoPushToken\n                        }),\n                      timeout: 10000\n                    })\n                      .then(response => {\n                        console.log('done: '+response.insertId)\n                        })\n                      .catch(err => {console.log(\"Error: \"+err)});\n        console.log('fetching...');\n\n\n   }\n\nfunction distanceBetweenPoints(lat1, lon1, lat2, lon2) {\n    const R = 6371e3; // metres\n    const φ1 = lat1 * Math.PI/180; // φ, λ in radians\n    const φ2 = lat2 * Math.PI/180;\n    const Δφ = (lat2-lat1) * Math.PI/180;\n    const Δλ = (lon2-lon1) * Math.PI/180;\n\n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n              Math.cos(φ1) * Math.cos(φ2) *\n              Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n\n    const d = R * c; // in metres\n    return d;\n\n}\n\n// Client specific code\n// api.sendSourceToBackend(source)\n  function filterOffers(offers) {\n    console.log(\"filterOffers: entry\")\n    //check location of offers to the location of user\n    //loop through the list and find the ones within the radius\n    console.log(\"filterOffers: \"+JSON.stringify(offers))\n    let localOffers = [];\n    for (let i=0; i< offers.length; i++) {\n        console.log('offers[i].latitude: '+ offers[i].latitude)\n        console.log('lat: '+ lat)\n        const d = distanceBetweenPoints(lat,lng,offers[i].latitude,offers[i].longitude)\n        console.log('d: '+ d)\n        if (d < 4000)//1000m\n          localOffers.push(offers[i])\n    }\n    return localOffers;\n  }\n\n  const getOffers= async()=>{\n\n      console.log(\"fetchData: entry\");\n      const userResponse = await fetch(nodeAddress+'/User?name='+ username);\n      const userInfo = await userResponse.json();\n      setUserDetails(userInfo);\n      console.log(\"fetchData userInfo: \"+JSON.stringify(userInfo)+ \"length: \"+userInfo.length);\n\n      if (userInfo.length > 0) {\n          operation = \"UPDATE\";\n      }\n      else {\n          operation = \"INSERT\";\n      }\n\n    console.log(\"fetchData: entry\");\n    const response = await fetch(nodeAddress+'/VendorOffer');\n    console.log(\"fetchData: entry\")\n    const offers = await response.json();\n    let localOffers = offers;\n    setVendorOffers(filterOffers(offers));\n    console.log(\"fetchData: \"+vendorOffers)\n\n  }\n function fourDigitTime(time) {\n   const mins = time.getMinutes();\n   const hours = time.getHours();\n   const minsStr =  mins < 10? \"0\"+mins: mins;\n   const hoursStr = hours < 10? \"0\"+hours: hours;\n   return hoursStr + \":\" +minsStr;\n }\n\n function dateformat(date) {\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n      \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n    ];\n   var day = date.getDate();\n\n   var monthStr = monthNames[date.getMonth()];\n\n   return day+\" \" +monthStr+\" \"+fourDigitTime(date);\n }\n function getImage(foodType) {\n\n    if (foodType === 'Thai') {\n     return thaiURI\n    }\n    else if (foodType === 'Chinese') {\n       return chineseURI\n    }\n    else if (foodType === 'Burger') {\n       return burgerURI\n    }\n    else {\n //      let fname = \"../GrabItServer/\"+foodType+\".png\";\n   //    const img = Image(require(fname))\n     //  return Image.resolveAssetSource(img).uri\n  //  }\n       return chickenURI\n    }\n\n\n }\n\nconst renderItem = ({ item }) => {\n const backgroundColor = item.id === selectedId ? \"#6e3b6e\" : \"#f9c2ff\";\n\n return (\n    <ListItem\n        onPress={() => {props.navigation.navigate('Checkout',{ item:item })}}>\n        <Avatar size={100} source={{uri: getImage(item.summary)}}/>\n        <ListItem.Content>\n           <ListItem.Title>\n             {item.name+\"\\n\" +\n              item.summary+\": \"+item.ccy+item.discountedPrice.toFixed(2)+\" \"+\"\\n\"+\n              item.postcode+\"\\n\"+\n               \"Expires on \"+\n               dateformat(new Date(item.expiryTime))}\n           </ListItem.Title>\n           <ListItem.Subtitle>\n             {item.description}\n           </ListItem.Subtitle>\n        </ListItem.Content>\n     </ListItem>\n );\n};\n\nfunction listItems() {\n    return <FlatList\n          data = {vendorOffers}\n          renderItem={renderItem}\n          keyExtractor={(item, index) => index.toString()}\n          extraData={selectedId}\n        />\n  }\n  function noOffers() {\n      return  <Text style={{ color: '#655F5F', marginLeft: 25, marginTop: 50, fontSize: 18, alignItems: 'center', width: 310, height: 55 }}>\n          Currently no offers available\n        </Text>\n  }\n\nasync function registerForPushNotificationsAsync() {\n  let token;\n  console.log(\"registerForPushNotificationsAsync entry\")\n  if (Constants.isDevice) {\n    const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);\n    let finalStatus = existingStatus;\n    if (existingStatus !== 'granted') {\n      const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);\n      finalStatus = status;\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!');\n      return;\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data;\n    console.log(token);\n  } else {\n     alert('Push Notifications for android or iOS phones only permitted');\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    });\n  }\n  console.log(\"registerForPushNotificationsAsync: \"+token)\n//  setExpoPushToken(token);\n//  console.log(\"registerForPushNotificationsAsync pushToken: \"+expoPushToken)\n\n  return token;\n}\n\nfunction Offers({navigation}) {\n   return ( vendorOffers ==null || vendorOffers.length < 1 ? noOffers(): listItems());\n}\n\n     return (\n             <ChildStack.Navigator initialRouteName=\"Offers\">\n            <ChildStack.Screen name=\"Offers\" component={Offers} />\n            </ChildStack.Navigator>\n\n     );\n\n}\n\n","import React, { useState, useEffect} from 'react';\nimport { FlatList, Image,  StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\nimport logo from './assets/logo.png';\nimport { List, ListItem } from \"react-native-elements\";\n\nexport default function UserList(props) {\n\n  const [vendorData, setVendorData] = useState(null);\n\n  useEffect(() => {\n     console.log(\"useEffect: entry\");\n     if (vendorData == null)\n        fetchData();\n  });\n\n  fetchData= async()=>{\n    console.log(\"fetchData: entry\");\n    const response = await fetch('http://192.168.0.16:3000/VendorOffer');\n    console.log(\"fetchData: entry\")\n    const users = await response.json();\n    setVendorData(users);\n    console.log(\"fetchData: \"+vendorData)\n\n  }\n\n\n\n   return (\n        <FlatList\n          data = {vendorData}\n          renderItem={({ item }) => (\n                    <ListItem\n                      title={item.summary}\n                      subtitle={item.description}\n                    />\n                    )}\n        />\n\n\n\n   );\n}\n\n\n\n","import React, { useState, useEffect} from 'react';\nimport { Platform, Alert, Image,  StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\nimport {ImageBackground} from 'react-native';\n\n\n//const nodeAddress = 'http://192.168.0.197:3000'\n//const nodeAddress = 'http://34.89.25.113:3000'\nvar nodeAddress = 'http://34.89.25.113:3000'\nconst nodeWebAddress = 'https://34.89.25.113:8000'\n\nexport default function DeceasedPerson(props) {\n  const [surname, setSurname] = useState('');\n  const [firstNames, setFirstNames] = useState('');\n  const [deathDate, setDeathDate] = useState(null);\n  const [dob, setDob] = useState(null);\n  var date = null;\n\n\n  function postPersonInfo() {\n\n        var dateDeath = formatDateOfDeath()\n        console.log(\"postPersonInfo: entry: \"+dateDeath);\n        if (Platform.OS==='web')\n           nodeAddress = nodeWebAddress\n\n        const request = nodeAddress+'/Person';\n //       const request = 'http://34.89.25.113:3000/User';\n                fetch(request, {\n                      method: 'POST',\n                      headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json'},\n                      body: JSON.stringify({\n                        operation: 'INSERT',\n                        surname: surname,\n                        firstNames: firstNames,\n                        deathDate: deathDate,\n                        dob: dob,\n                        }),\n                      timeout: 10000\n                    })\n                      .then(response => {\n                        console.log('done: '+response.insertId)\n                        Alert.alert(\"Published User\",\n                                    \"summary: \"+surname);\n                        })\n                      .catch(err => {console.log(\"Error: \"+err)});\n        console.log('fetching...');\n\n\n   }\n\n   function formatDateOfDeath() {\n\n       var from = deathDate;\n       var numbers = from.match(/\\d+/g);\n       date = new Date(numbers[2], numbers[1]-1, numbers[0]);\n       console.log(\"formatDateOfDeath: \"+numbers);\n\n       console.log(\"formatDateOfDeath: \"+date);\n       return date;\n\n   }\n   return (\n      <View style={styles.container}>\n       <ImageBackground\n            source={require('./assets/noor.png')}\n            style={styles.bgImage}>\n\n      <TextInput\n        style={{ fontSize: 20,  marginLeft: 20, marginTop: 0, width: 300, height: 30  }}\n        placeholder=\"Enter Persons surname\"\n        onChangeText={surname => setSurname(surname)}\n        defaultValue={surname}\n      />\n      <TextInput\n        style={{   fontSize: 20,  paddingTop: 10, marginLeft: 20, marginTop: 0, width: 300, height: 30  }}\n        placeholder=\"Enter Persons first names\"\n        onChangeText={firstNames => setFirstNames(firstNames)}\n        defaultValue={firstNames}\n      />\n\n      <TextInput\n        style={{ fontSize: 20,  marginLeft: 20, marginTop: 10, width: 300, height: 20 }}\n        keyboardType = 'default'\n        placeholder=\"Enter Date Died (yyyy-mm-dd)\"\n        onChangeText={deathDate => setDeathDate(deathDate)}\n        defaultValue={deathDate}\n      />\n      <TextInput\n        style={{ fontSize: 20,  marginLeft: 20, marginTop: 10, width: 300, height: 20 }}\n        keyboardType = 'default'\n        placeholder=\"Enter Date of Birth\"\n        onChangeText={dob => setDob(dob)}\n        defaultValue={dob}\n      />\n\n\n      <TouchableOpacity\n        onPress={() => postPersonInfo()}\n        disabled={!Boolean(surname && firstNames)}\n        style={{opacity: (!Boolean(surname && firstNames)) ? 0.2: 0.8,borderRadius:8, height: 30, width: 160, borderColor: 'black', backgroundColor: 'gray', margin:20 }}>\n        <Text style={{ textAlign: 'center', fontSize: 20, color: 'black',height: 30,width: 160}}>Store Details</Text>\n      </TouchableOpacity>\n      </ImageBackground>\n    </View>\n   );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#ecf0f1',\n  },\n    bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n\n    },\n     buttonVisible: {\n      marginTop: 20,\n      marginLeft: 10,\n      borderRadius:8,\n      width: 200,\n      borderColor: 'black',\n      backgroundColor: 'gray',\n    }\n});","import React, { useState, useEffect} from 'react';\nimport { Platform, Alert, Image, ImageBackground, FlatList, StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\n\n//const nodeAddress = 'http://192.168.0.197:3000'\n//const nodeAddress = 'http://34.89.25.113:3000'\nvar nodeAddress = 'http://34.89.25.113:3000'\nconst nodeWebAddress = 'https://34.89.25.113:8000'\n  const DuasBeforeBurialCount = 24;\n\nexport default function DuasBeforeBurial(props) {\n  let init = false;\n\n  console.log(\"DuasBeforeBurial props: \" +JSON.stringify(props))\n  console.log(\"DuasBeforeBurial props init: \" +init)\n\n  const [reserveList, setReserveList] = useState([]);\n  const [nameList, setNameList] = useState([]);\n  const userDetails = props.route.params.userDetails; //TODO - have to handle case where multiple user details returned.\n  const [userId, setUserId] = useState(userDetails.userId);\n  const [operation, setOperation] = React.useState(null);\n  const [surname, setSurname] = useState(userDetails.surname);\n  const [firstNames, setFirstNames] = useState(userDetails.fullnames);\n  const [duasBeforeBurial, setDuasBeforeBurial] = React.useState(null);\n  const [table, setTable] = useState(props.route.params.table);\n\n   useEffect(() => {\n      console.log(\"UserInfo useEffect: entry\");\n      // get data if it exists before entering any new data\n      if (init == false)\n         fetchData();\n   },[]);//[] is required to only allow useEffect to be called once otherwise will always be called on render\n\n   const loadDuas= async()=>{\n       console.log('loadDuas...');\n        if (Platform.OS==='web')\n           nodeAddress = nodeWebAddress\n\n       const request = nodeAddress+'/Duas';\n       const operation = 'INSERT'\n\n\n       fetch(request, {\n             method: 'POST',\n             headers: {\n               Accept: 'application/json',\n               'Content-Type': 'application/json'},\n             body: JSON.stringify({\n               operation: operation,\n               userId: userId,\n               tableName: table\n             }),\n             timeout: 10000\n       })\n       .then(response => {\n         console.log('done: '+response.insertId)\n         fetchData();\n       })\n      .catch(err => {console.log(\"Error: \"+err)});\n\n   }\n   const updateDuas= async()=>{\n       console.log('updateDuas...'+reserveList.length);\n       const request = nodeAddress+'/Duas';\n       const operation = 'UPDATE'\n\n\n       for (var i=0; i < reserveList.length; i++) {\n         if(reserveList[i] != 0) {\n           //var duasLeft = duasBeforeBurial[i].totalLeft-reserveList[i];\n            fetch(request, {\n                 method: 'POST',\n                 headers: {\n                   Accept: 'application/json',\n                   'Content-Type': 'application/json'},\n                 body: JSON.stringify({\n                   operation: operation,\n                   userId: userId,\n                   duaId: duasBeforeBurial[i].duaId,\n                   operation: 'UPDATE',\n                   reserve: reserveList[i],\n                   name: nameList[i],\n                   tableName: table,\n                 }),\n                 timeout: 10000\n           })\n           .then(response => {\n             console.log('done: ')\n             fetchData();\n\n           })\n           .catch(err => {console.log(\"Error: \"+err)});\n         }\n       }\n\n      //TODO also save the name of the person who has taken the dua against the userId and the dua and number taken\n\n   }\n\n   const initReserveList = (userInfo) => {\n      console.log(\"initReserveList userInfo: \"+userInfo)\n      var tmpReserveArray = [DuasBeforeBurialCount];\n      var tmpNameArray = [DuasBeforeBurialCount];\n      for (var i=0; i < userInfo.length; i++) {\n          console.log(\"initReserveList i: \"+i)\n          console.log(\"initReserveList userInfo left: \"+ userInfo[i].totalLeft)\n          tmpReserveArray[i] = 0;\n          tmpNameArray[i] = '';\n      }\n      setReserveList(tmpReserveArray);\n      setNameList(tmpNameArray);\n\n     console.log(\"initReserveList : \"+reserveList)\n     console.log(\"initNameList : \"+nameList)\n   }\n\n   const fetchData= async()=>{\n       console.log(\"fetchData: entry: \"+userId);\n       init=true;\n        if (Platform.OS==='web')\n           nodeAddress = nodeWebAddress\n\n       const request = nodeAddress+'/Duas';\n\n       const response = await fetch(request+'?userId='+ userId+'&'+'tableName='+table);\n       if (response.status >= 200 && response.status <= 299) {\n         const userInfo = await response.json();\n         console.log(\"fetchData userInfo left: \"+userInfo);\n         if (userInfo.length > 0) {\n             console.log(\"fetchData userInfo length: \"+userInfo.length);\n             setOperation(\"UPDATE\")\n             setDuasBeforeBurial(userInfo);\n             initReserveList(userInfo);\n           //  updateDuas()\n             console.log(\"results: \"+userInfo[0])\n         }\n         else {\n             console.log(\"No records found fetching data, userId: \"+userId)\n             setOperation(\"INSERT\")\n             loadDuas()\n         }\n\n       } else {\n         // Handle errors\n         console.log(response.status, response.statusText);\n       }\n\n     }\n\n    function reserveItem(item) {\n      console.log(\"reserveItem: \"+item.surah);\n      alert(\"reserveItem: \"+item.surah)\n      //dialog to reserve\n\n    }\n    const handleReserveUpdate = (item, index) => {\n      console.log(\"handleReserveUpdate: \"+item+\": \"+index)\n//      console.log(\"handleReserveUpdate: \"+newReserveList)\n      if (/^-?\\d+$/.test(item) || item === ''|| item ==='-') {\n       if (item ==='' || item ==='-')\n         item=0;\n       let newReserveList = [...reserveList] ;\n        newReserveList[index] = parseInt(item,10);\n       console.log(\"handleReserveUpdate, name before: \"+nameList[index])\n        setReserveList(newReserveList);\n        console.log(\"handleReserveUpdate, name after: \"+nameList[index])\n      }\n    }\n    const handleNameUpdate = (item, index) => {\n      console.log(\"handleNameUpdate: \"+item+\": \"+index)\n       let newNameList = [...nameList] ;\n        newNameList[index] = item;\n        setNameList(newNameList);\n    }\n\n    const renderItem = ({ item, index }) => (\n    duasBeforeBurial && (\n        <View style={{flex: 1, flexDirection: 'row', justifyContent: 'center'}}>\n            {<Text style={styles.duatextLabel}> {duasBeforeBurial[index].surah} </Text>}\n            <Text style={styles.subtextLabel}> {duasBeforeBurial[index].totalCount} </Text>\n            <Text style={styles.subtextLabel}> {duasBeforeBurial[index].totalLeft} </Text>\n            <TextInput\n                style={styles.input}\n                placeholder = \"Enter how many\"\n                onChangeText={e => handleReserveUpdate(e, index)}\n                value = {item.toString()}\n            />\n        </View>\n    )\n  );\n   console.log('reserveList', reserveList);\n\n    return (\n\n\n   <View style={styles.container}>\n       <ImageBackground\n            source={require('./assets/noor.png')}\n            style={styles.bgImage}>\n          <Text\n            style={styles.textLabel}>\n            {\"Duas for \"+firstNames+\" \"+surname}\n          </Text>\n          <Text\n             style={styles.textLabel}>\n             {\"Duas before Burial\"}\n          </Text>\n\n          <TouchableOpacity\n              onPress={() => updateDuas()}\n              style={{borderRadius:8, borderColor: 'black', backgroundColor: 'gray', margin:10, width: 200 }}>\n              <Text style={{ textAlign: 'center', fontSize: 18, color: 'white',height: 30,width: 200}}>Store Reserved Duas</Text>\n          </TouchableOpacity>\n\n          <View style={{flex: 1, flexDirection: 'row'}}>\n              <Text\n                 style={styles.duatextHeadingLabel}>\n                 {\"Surah/Dua\"}\n              </Text>\n              <Text\n                 style={styles.subtextHeadingLabel}>\n                 {\"Total\"}\n              </Text>\n              <Text\n                 style={styles.subtextHeadingLabel}>\n                 {\"To Do\"}\n              </Text>\n              <Text\n                 style={styles.subtextEndHeadingLabel}>\n                 {\"Reserve\"}\n              </Text>\n              <Text\n                 style={[table==='Quran'?{display: 'none'}:{display: 'none'}]}>\n                 {\"Name\"}\n              </Text>\n          </View>\n          <View style={{flex: 5, flexDirection: 'row'}}>\n              <FlatList data={reserveList}\n                            renderItem={renderItem}\n                            keyExtractor={(item, index) => index.toString()}\n              />\n          </View>\n      </ImageBackground>\n   </View>\n );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 5,\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n    flex: 1,\n    marginTop: 10,\n    opacity: 0.7,\n    marginRight: 20,\n    color: 'black',\n    width: 5,\n    height: 25,\n    fontWeight: 'bold',\n    backgroundColor: 'gray',\n    fontSize: 14,\n  },\n  textLabel: {\n    padding: 10,\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 18,\n  },\n  duatextLabel: {\n    flex: 4,\n    marginLeft: 5,\n    marginTop: 10,\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 14,\n  },\n  subtextLabel: {\n    flex: 1,\n    marginTop: 10,\n    fontWeight: 'bold',\n    color: 'black',\n    fontSize: 14,\n  },\n\n    duatextHeadingLabel: {\n      flex: 4,\n      marginTop: 10,\n      marginLeft: 5,\n      color: 'black',\n      height: 25,\n      backgroundColor: '#8dc2e0',\n      fontWeight: 'bold',\n      fontSize: 14,\n    },\n    subtextHeadingLabel: {\n      flex: 1,\n      marginTop: 10,\n      color: 'black',\n      height: 25,\n      backgroundColor: '#8dc2e0',\n      fontWeight: 'bold',\n      fontSize: 14,\n    },\n    subtextEndHeadingLabel: {\n      flex: 1,\n      marginTop: 10,\n      marginRight: 20,\n      color: 'black',\n      height: 25,\n      backgroundColor: '#8dc2e0',\n      fontWeight: 'bold',\n      fontSize: 14,\n    },\n\n    bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n\n    }\n\n});\n\n","import React, { useState, useEffect} from 'react';\nimport { Alert, Image,  FlatList, StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\nimport DuasBeforeBurial from './DuasBeforeBurial';\nimport {ImageBackground} from 'react-native';\n\n  //let reserveList = Array(DuasBeforeBurialCount).fill(0);\nexport default function DeceasedPersonDuas(props) {\n\n  const [reserveList, setReserveList] = useState([]);\n  const userDetails = props.route.params.userDetails[0]; //TODO - have to handle case where multiple user details returned.\n  const [userId, setUserId] = useState(userDetails.userId);\n  const [surname, setSurname] = useState(userDetails.surname);\n  const [firstNames, setFirstNames] = useState(userDetails.fullnames);\n  const [deathDate, setDeathDate] = useState(dateformat(new Date(userDetails.dateDied)));\n  const [dob, setDob] = useState(null);\n\n  function dateformat(date) {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n      ];\n     var day = date.getDate();\n\n     var monthStr = monthNames[date.getMonth()];\n\n     return day+\" \" +monthStr+\" \"+date.getFullYear();\n   }\n    return (\n   <View style={styles.container}>\n       <ImageBackground\n            source={require('./assets/noor.png')}\n            style={styles.bgImage}>\n\n          <Text\n            style={styles.textLabel}>\n            {\"Duas for \"+firstNames+\" \"+surname}\n          </Text>\n          <Text\n            style={styles.textLabel}>\n            {\"Died on: \"+deathDate}\n          </Text>\n          <Text\n             style={styles.textLabel}>\n             {\"Duas before Burial\"}\n          </Text>\n          <TouchableOpacity\n              onPress={() => {props.navigation.navigate('DuasBeforeBurial',{ userDetails:userDetails, table:'DuasBeforeBurial' })}}\n              style={{borderRadius:8, borderColor: 'black', backgroundColor: 'gray', margin:10, width: 200 }}>\n              <Text style={{ textAlign: 'center', fontSize: 18, color: 'white',height: 38,width: 200}}>Duas Before Burial</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n              onPress={() => {props.navigation.navigate('DuasBeforeBurial',{ userDetails:userDetails, table:'DuasBeforeChehlum' })}}\n              style={{borderRadius:8, borderColor: 'black', backgroundColor: 'gray', margin:10, width: 200 }}>\n              <Text style={{ textAlign: 'center', fontSize: 18, color: 'white',height: 38,width: 200}}>Duas Before Chehlum</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n              onPress={() => {props.navigation.navigate('DuasBeforeBurial',{ userDetails:userDetails, table:'DuasOnChehlum' })}}\n              style={{borderRadius:8, borderColor: 'black', backgroundColor: 'gray', margin:10, width: 200 }}>\n              <Text style={{ textAlign: 'center', fontSize: 18, color: 'white',height: 38,width: 200}}>Duas On Chehlum</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n              onPress={() => {props.navigation.navigate('DuasBeforeBurial',{ userDetails:userDetails, table:'Quran' })}}\n              style={{borderRadius:8, borderColor: 'black', backgroundColor: 'gray', margin:10, width: 200 }}>\n              <Text style={{ textAlign: 'center', fontSize: 18, color: 'white',height: 38,width: 200}}>Quran</Text>\n          </TouchableOpacity>\n\n        </ImageBackground>\n   </View>\n );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5,\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n  flex: 1,\n    marginTop: 10,\n    color: 'black',\n    width: 5,\n    height: 25,\n    backgroundColor: 'gray',\n    fontSize: 14,\n  },\n  textLabel: {\n    padding: 10,\n    color: 'black',\n    fontSize: 18,\n  },\n  duatextLabel: {\n    flex: 3,\n    marginTop: 10,\n    color: 'black',\n    fontSize: 14,\n  },\n  subtextLabel: {\n    flex: 1,\n    marginTop: 10,\n    color: 'black',\n    fontSize: 14,\n  },\n    duatextHeadingLabel: {\n      flex: 3,\n      marginTop: 10,\n      color: 'black',\n      height: 25,\n      backgroundColor: '#8dc2e0',\n      fontSize: 14,\n    },\n    subtextHeadingLabel: {\n      flex: 1,\n      marginTop: 10,\n      color: 'black',\n      height: 25,\n      backgroundColor: '#8dc2e0',\n      fontSize: 14,\n    },\n\n    bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n\n    }\n});","import React, { useState, useEffect} from 'react';\nimport { Platform, Alert, StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport DeceasedPersonDuas from './DeceasedPersonDuas';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {ImageBackground} from 'react-native';\n\n//const nodeAddress = 'http://192.168.0.197:3000'\n//const nodeAddress = 'https://34.89.25.113:3000'\nvar nodeAddress = 'http://34.89.25.113:3000'\nconst nodeWebAddress = 'https://34.89.25.113:8000'\n\n\nexport default function DuasForDepartedHome(props) {\n  const [surname, setSurname] = useState('');\n  const [firstNames, setFirstNames] = useState('');\n  const [dateOfDeath, setDateOfDeath] = React.useState(null);\n  const [dob, setDOB] = React.useState(null);\n  const [userDetails, setUserDetails] = useState(null);\n\n  const searchPerson = async()=>{\n    console.log(\"searchPerson\");\n    setDateOfDeath(null);\n    if (Platform.OS==='web')\n       nodeAddress = nodeWebAddress\n\n    //search database for any person entered already\n    // if found then display name and duas recited and outstanding\n    const response = await fetch(nodeAddress+'/Person?surname='+ surname+'&fullnames='+firstNames);\n    if (response.status >= 200 && response.status <= 299) {\n      const userInfo = await response.json();\n      console.log(userInfo);\n      if (userInfo.length > 0) {\n          console.log(\"Found: \"+userInfo[0].surname)\n   //       setSurname(userInfo[0].surname);\n   //       setFullNames(userInfo[0].fullnames);\n          setDateOfDeath(dateformat(new Date(userInfo[0].dateDied)));\n          setDOB(userInfo[0].dob);\n          setUserDetails(userInfo);\n      }\n      else {\n          console.log(\"Name not found: \"+surname)\n          if (Platform.OS==='web')\n             alert(\"Person not found, please check spelling or Add Person\")\n          else\n             Alert.alert(\"Person not found, please check spelling or Add Person\")\n\n      }\n\n    } else {\n      // Handle errors\n      console.log(response.status, response.statusText);\n    }\n\n  }\n   function dateformat(date) {\n      const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n      ];\n     var day = date.getDate();\n\n     var monthStr = monthNames[date.getMonth()];\n\n     return day+\" \" +monthStr+\" \"+date.getFullYear();\n   }\n\n     return (\n\n      <View style={styles.container}>\n       <ImageBackground\n            source={require('./assets/noor.png')}\n            style={styles.bgImage}>\n          <Text style={{fontSize: 16, color: 'black',opacity: 1, marginLeft: 10, marginTop: 30}}>\n            {\"Salamalaikum. Blessings to you and your family especially your recently departed loved ones\"}\n          </Text>\n          <Text style={{fontSize: 16, color: 'black',opacity: 1, marginLeft: 10, marginTop: 30}}>\n            {\"If the person has been added before, please enter their names and press search, otherwise add the person.\"}\n          </Text>\n\n         <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20   }}>\n              <TextInput\n                style={styles.input}\n                placeholder=\"Enter first names\"\n                value={firstNames}\n                onChangeText={text => setFirstNames(text)}\n              />\n              <TextInput\n                style={styles.input}\n                placeholder=\"Enter surname\"\n                value={surname}\n                onChangeText={text => setSurname(text)}\n              />\n         </View>\n\n         <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20   }}>\n          <TouchableOpacity\n            onPress={() => {searchPerson()}}\n            style={styles.buttonVisible}>\n            <Text style={{ textAlign: 'center', fontSize: 18, color: 'black',height: 30,width: 160}}>{ 'Search Person'}</Text>\n          </TouchableOpacity>\n         <TouchableOpacity\n            onPress={() => {props.navigation.navigate('DeceasedPerson',{ userDetails:userDetails })}}\n            style={[styles.buttonVisible]}>\n            <Text style={{ textAlign: 'center', fontSize: 18, color: 'black',height: 30,width: 160}}>{'Add Person '}</Text>\n          </TouchableOpacity>\n         </View>\n         <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20, marginLeft: 10   }}>\n\n              <Text style={{fontSize: 16, color: 'black',opacity: 1}}>\n                {[dateOfDeath !=null?\"Date Died: \"+ dateformat(new Date(dateOfDeath)): \"\"]}\n              </Text>\n         </View>\n\n         <View style={{flex: 1, flexDirection: 'row', justifyContent: 'flex-start', marginTop: 20   }}>\n              <TouchableOpacity\n                onPress={() => {dateOfDeath !=null ? props.navigation.navigate('DeceasedPersonDuas',{ userDetails:userDetails }):\"\"}}\n                style={[dateOfDeath ==null ? styles.buttonInvisible:styles.buttonVisible]}>\n                <Text style={{ textAlign: 'center', fontSize: 20, color: 'black',height: 30,width: 160}}>{'Search Duas '}</Text>\n              </TouchableOpacity>\n         </View>\n\n       </ImageBackground>\n     </View>\n\n\n     );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#ecf0f1',\n  },\n  input: {\n    marginTop: 10,\n    marginLeft: 10,\n    height: 30,\n    width: 160,\n    color: 'black',\n    fontSize: 16,\n  },\n    buttonVisible: {\n      marginLeft: 10,\n      opacity: 0.7,\n      borderRadius:8,\n      height: 30,\n      width: 160,\n      borderColor: 'black',\n      backgroundColor: 'gray',\n    },\n      buttonInvisible: {\n       display: 'none',\n      },\n\n    bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n\n    }\n});\n\n\n","import 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport React, {useState,useEffect} from 'react';\nimport {Alert, Image,  StyleSheet, Text,TextInput, View, TouchableOpacity } from 'react-native';\nimport logo from './assets/noor.png';\nimport * as AuthSession from 'expo-auth-session';\nimport jwtDecode from 'jwt-decode';\nimport * as WebBrowser from \"expo-web-browser\";\nimport VendorPostOffer from './VendorPostOffer';\nimport CurrentOffers from './CurrentOffers';\nimport UserList from './UserList';\nimport DeceasedPerson from './DeceasedPerson';\nimport DeceasedPersonDuas from './DeceasedPersonDuas';\nimport DuasBeforeBurial from './DuasBeforeBurial';\nimport DuasForDepartedHome from './DuasForDepartedHome';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {ImageBackground} from 'react-native';\nimport { Platform} from 'react-native';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport Constants from 'expo-constants';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Location from \"expo-location\";\n//const nodeAddress = 'http://192.168.0.197:3000'\n//const nodeAddress = 'http://34.89.25.113:3000'\nconst nodeAddress = 'https://34.89.25.113:8000'\n\n\nWebBrowser.maybeCompleteAuthSession(); //completes but still shows the browser window\n\nconst VendorUser = \"Vendor\";\nconst CustomerUser = \"Customer\";\nconst auth0Domain = 'https://dev-2o8m1tra.eu.auth0.com';\nconst auth0ClientId = 'Y1eut5S6EUb85NZBn5vD5hC3LyVkmV9z';\nconst Stack = createStackNavigator();\n//const GOOGLE_PLACES_API_KEY='AIzaSyA_vleE5UGcr2uBjUF2zkP060njrdviPkg';\n\nconst GOOGLE_PLACES_API_KEY='AIzaSyARVteaUBAeOKLC-vsBGFdd3Ll4pOFd1SI';\n\nconst useProxy = Platform.select({ web: false, default: true });\nconst redirectUri = AuthSession.makeRedirectUri({ useProxy });\n//const redirectUrl = AuthSession.getRedirectUrl();\n\n\nexport default function App() {\n\nconst [token, setToken] = useState(null);\nconst [userType, setUserType] = useState(null);\nconst [user, setUser] = useState('');\nconst [name, setName] = useState('');\nconst [location, setLocation] = useState('');\nconst [surname, setSurname] = useState('');\nconst [dateOfDeath, setDateOfDeath] = React.useState(null);\nconst [dob, setDOB] = React.useState(null);\nconst [fullnames, setFullNames] = useState('');\nconst [userDetails, setUserDetails] = useState(null);\n\nconst authorizationEndpoint = `${auth0Domain}/authorize`;\n\nconst [request, result, promptAsync] = AuthSession.useAuthRequest(\n    {\n      redirectUri,\n      clientId: auth0ClientId,\n      // id_token will return a JWT token\n      responseType: 'id_token',\n      // retrieve the user's profile\n      scopes: ['openid', 'profile'],\n      extraParams: {\n        // ideally, this will be a random value\n        nonce: 'nonce',\n      },\n    },\n    { authorizationEndpoint }\n  );\n  // Retrieve the redirect URL, add this to the callback URL list\n  // of your Auth0 application.\n  console.log(`Redirect URL: ${redirectUri}`);\n  useEffect(() => {\n    let isMounted = true;\n    if (result && isMounted) {\n      if (result.error) {\n        Alert.alert(\n          'Authentication error',\n          result.params.error_description || 'something went wrong'\n        );\n        return;\n      }\n      if (result.type === 'success') {\n        // Retrieve the JWT token and decode it\n        const jwtToken = result.params.id_token;\n        console.log('jwtToken: '+JSON.stringify(jwtToken));\n         const decoded = jwtDecode(jwtToken);\n        console.log('decoded: '+JSON.stringify(decoded));\n        const { name } = decoded;\n        setName(name);\n        console.log('result: '+JSON.stringify(result));\n        console.log('name: '+name);\n//        let token = result.params.access_token;\n//        console.log('token: '+token)\n        setToken(jwtToken);\n\n//        const user = decoded;\n        setUser(decoded)\n        console.log(\"user: \"+decoded.nickname)\n        console.log(\"name: \"+decoded.name)\n        console.log(\"sub: \"+decoded.sub)\n        console.log(\"email: \"+decoded.email)\n        isMounted=false;\n\n//       console.log(\"naviation: \"+navigation)\n\n      }\n    }\n  }, [result]);\n\nfunction toQueryString(params) {\n  return '?' + Object.entries(params)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n    .join('&');\n}\nfunction userLogin(pUserType, navigation) {\n    setUserType(pUserType);\n    console.log (pUserType +' Login entry: '+navigation)\n//    _loginWithAuth0(pUserType,navigation);\n    promptAsync({ useProxy })\n\n//    _loginWithAuth0Test(pUserType, navigation);\n}\nasync function fetchUserInfo(token) {\n  const response = await fetch(`${auth0Domain}/userinfo`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n  });\n\n  return await response.json();\n}\n\nasync function fetchPerson(token) {\n  const response = await fetch(`${auth0Domain}/Person`, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    },\n  });\n\n  return await response.json();\n}\n\nfunction getUserProfile() {\n\n     var webAuth = AuthSession.WebAuth({\n        domain:       `${auth0Domain}`,\n        clientID:     auth0ClientId\n     });\n    webAuth.client.userInfo(token, function(err, user) {\n        // This method will make a request to the /userinfo endpoint\n        // and return the user object, which contains the user's information,\n        // similar to the response below.\n    });\n}\n\n\n\nconst _loginWithAuth0Test = async(pUserType, navigation) => {\n    console.log(\"_loginWithAuth0Test entry\");\n            const user = {\n                nickname : 'Ts',\n                name : 'Tester',\n                sub : 'ttt',\n                email : 'test@test.com'\n            }\n           setUser(user);\n           console.log(\"userType: \"+pUserType);\n           if (navigation !=null) {\n                if (pUserType === VendorUser)\n                    navigation.navigate('UserInfo', { user:user })\n                else\n                    navigation.navigate('CurrentOffers', { user:user })\n            }\n            else\n                console.log(\"navigation is null\");\n\n};\n\n\n  function showMeals(details, navigation) {\n    console.log(\"showMeals data: \"+JSON.stringify(details));\n    console.log(JSON.stringify(details.geometry.location));\n// showMeals data: {\"formatted_address\":\"Wallington SM6, UK\",\"geometry\":{\"location\":{\"lat\":51.3626561,\"lng\":-0.1460505},\"viewport\":{\"northeast\":{\"lat\":51.38367016461506,\"lng\":-0.1196857396527085},\"southwest\":{\"lat\":51.33808156264048,\"lng\":-0.1595970044992797}}},\"name\":\"SM6\"}\n\n//      setLocation(details.geometry.location);\n        //following user setup for testing - remove when doing proper testing.\n        const user = {\n        nickname: 'mirzaam',\n        name: 'Tester',\n        sub: 'sub',\n        email: 'test@mail.com',\n        location: details.geometry.location\n    };\n    setUser(user);\n    if (navigation !=null) {\n         navigation.navigate('CurrentOffers', { user:user })\n    }\n\n\n  }\n\nfunction addPerson(navigation) {\n    navigation.navigate('DeceasedPerson',{ user:user })\n    /*\n    if (token==null) {\n        userLogin(VendorUser, navigation)\n    }\n    else {\n        // check vendor has user details populated before posting offer\n        console.log(user)\n        if (user != null && navigation != null) {\n            navigation.navigate('VendorPostOffer',{ user:user })\n        }\n        else {\n              Alert.alert(\"Vendor Details\",\n                          \"Please enter your vendor details before posting an offer\");\n        }\n    }\n    */\n}\n\n\n\nconst searchPerson = async(navigation)=>{\n    console.log(\"searchPerson\");\n    //search database for any person entered already\n    // if found then display name and duas recited and outstanding\n    const response = await fetch(nodeAddress+'/Person?surname='+ surname+'&fullnames='+fullnames);\n    if (response.status >= 200 && response.status <= 299) {\n      const userInfo = await response.json();\n      console.log(userInfo);\n      if (userInfo.length > 0) {\n          console.log(\"Found: \"+userInfo[0].surname)\n   //       setSurname(userInfo[0].surname);\n   //       setFullNames(userInfo[0].fullnames);\n          setDateOfDeath(userInfo[0].dateOfDeath);\n          setDOB(userInfo[0].dob);\n          setUserDetails(userInfo);\n      }\n      else {\n          console.log(\"Name not found: \"+surname)\n      }\n\n    } else {\n      // Handle errors\n      console.log(response.status, response.statusText);\n    }\n\n}\n\n\nfunction LogoTitle() {\n  return (\n    <Image\n      style={{ width: '100%', height: 50 }}\n      source={require('./assets/duas.jpeg')}\n    />\n  );\n}\n\n\n  return (\n   <NavigationContainer>\n\n         <Stack.Navigator initialRouteName=\"Home\">\n           <Stack.Screen name=\"Duas for Departed\" component={DuasForDepartedHome} options={{\n                                                                                    title: 'Duas for Departed',\n                                                                                    headerStyle: {\n                                                                                      backgroundColor: '#dedede',\n\n                                                                                    },\n                                                                                    headerTitleStyle: {\n                                                                                      fontWeight: 'bold',\n                                                                                    },\n                                                                                  }}/>\n           <Stack.Screen name=\"DeceasedPerson\" component={DeceasedPerson} options={{\n                                                                                    title: 'Enter Deceased Person Details',\n                                                                                    headerStyle: {\n                                                                                      backgroundColor: '#dedede',\n\n                                                                                    },\n\n                                                                                    headerTitleStyle: {\n                                                                                      fontWeight: 'bold',\n                                                                                    },\n                                                                                  }}/>\n\n\n           <Stack.Screen name=\"DeceasedPersonDuas\" component={DeceasedPersonDuas} options={{\n                                                                                  title: 'Deceased Person Duas',\n                                                                                  headerStyle: {\n                                                                                    backgroundColor: '#dedede',\n\n                                                                                  },\n\n                                                                                  headerTitleStyle: {\n                                                                                    fontWeight: 'bold',\n                                                                                  },\n                                                                                }}/>\n\n\n           <Stack.Screen name=\"VendorPostOffer\" component={VendorPostOffer} />\n           <Stack.Screen name=\"DuasBeforeBurial\" component={DuasBeforeBurial} options={{\n\n                                                                                 title: 'Duas And Tasbeehs',\n                                                                                 headerStyle: {\n                                                                                   backgroundColor: '#dedede',\n\n                                                                                 },\n\n                                                                                 headerTitleStyle: {\n                                                                                   fontWeight: 'bold',\n                                                                                 },\n                                                                               }}/>\n           <Stack.Screen name=\"UserList\" component={UserList} />\n           <Stack.Screen name=\"CurrentOffers\" component={CurrentOffers} />\n         </Stack.Navigator>\n   </NavigationContainer>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: '#ecf0f1',\n  },\n  container1: {\n    top: 0,\n    padding: 10,\n    backgroundColor: '#ecf0f1',\n  },\n  customerInvisible: {\n    display: 'none',\n  },\n  customerVisible: {\n    color: 'gray',\n    fontSize: 16,\n    marginTop: 440\n  },\n  input: {\n    marginTop: 20,\n    color: 'black',\n    fontSize: 16,\n  },\n  vendorInvisible: {\n      display: 'none',\n    },\n  vendorVisible: {\n    marginTop: 10,\n    color: 'gray',\n    fontSize: 16,\n  },\n  buttonInvisible: {\n   display: 'none',\n  },\n\n  buttonVisible: {\n    marginTop: 20,\n    borderRadius:8,\n    width: 200,\n    borderColor: 'black',\n    backgroundColor: 'green',\n  },\n    bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\",\n     opacity: 0.4,\n    }\n\n});\n","module.exports = __webpack_public_path__ + \"static/media/out.3f0fb141.png\";","module.exports = __webpack_public_path__ + \"static/media/duas.e6954684.jpeg\";"],"sourceRoot":""}